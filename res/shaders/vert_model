#version 330 core
layout (location = 0) in vec3 aPos;
layout (location = 1) in vec3 aNormal;
layout (location = 2) in vec2 aTexCoord;
layout (location = 3) in mat4 aInstanceMatrix;

uniform mat4 uMatrixVP;

out VS_OUT
{
    vec3 pFragPos;
    vec3 pNormal; 
    vec2 pTexCoord;
    mat3 pMatNormal;
} vs_out;

void main()
{
    vs_out.pFragPos = (aInstanceMatrix * vec4(aPos, 1.0)).xyz;
    vs_out.pMatNormal = mat3(transpose(inverse(aInstanceMatrix)));
    vs_out.pNormal = vs_out.pMatNormal * aNormal;
    vs_out.pTexCoord = aTexCoord;
    gl_Position = uMatrixVP * aInstanceMatrix * vec4(aPos, 1.0);
}
